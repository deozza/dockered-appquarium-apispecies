name: Integration test + docker image generation

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'apiSpecies/config/**'
      - 'apiSpecies/src/**'
      - 'apiSpecies/tests/**'
      - '.docker/**'
      - '.github/workflows/docker_prod_image.yml'
      - 'docker-compose.prod.yml'
      - 'apiSpecies/composer.json'
      - 'apiSpecies/composer.lock'
      - 'apiSpecies/symfony.lock'
  push:
    branches: [ master ]
    paths:
      - 'apiSpecies/config/**'
      - 'apiSpecies/src/**'
      - 'apiSpecies/tests/**'
      - '.docker/**'
      - '.github/workflows/docker_prod_image.yml'
      - 'docker-compose.prod.yml'
      - 'apiSpecies/composer.json'
      - 'apiSpecies/composer.lock'
      - 'apiSpecies/symfony.lock'


jobs:

  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker test containers
      run: docker-compose -f docker-compose.test.yml up -d
    - name: Check composer
      run: docker-compose -f docker-compose.test.yml exec -T -u root appquarium-php-apispecies composer validate
    - name: Install composer dependencies
      run: docker-compose -f docker-compose.test.yml exec -T -u root appquarium-php-apispecies composer install --prefer-dist --no-scripts --no-progress -q -o
    - name: Create database
      run: docker-compose -f docker-compose.test.yml exec -T -u root appquarium-php-apispecies bin/console d:m:s:c --env=test
    - name: Load fixtures
      run: docker-compose -f docker-compose.test.yml exec -T -u root appquarium-php-apispecies bin/console t:f:l --env=test
    - name: Launch tests
      run: docker-compose -f docker-compose.test.yml exec -T -u root appquarium-php-apispecies bin/phpunit

  CD:
    runs-on: ubuntu-latest
    needs: CI
    steps:
    - uses: actions/checkout@v2
    - name: Put down test containers
      run: docker-compose -f docker-compose.test.yml down
    - name: Build the Docker prod container
      run: docker-compose -f docker-compose.prod.yml build appquarium-php-apispecies
    - name: Login to Docker
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Tag image
      run: docker tag deozza/appquarium-apispecies deozza/appquarium-apispecies:${{ steps.vars.outputs.sha_short }}
    - name: Push to Docker tagged image
      run: docker push deozza/appquarium-apispecies:${{ steps.vars.outputs.sha_short }}